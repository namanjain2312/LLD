1>Constructor Syntax
class ClassName {
    // Constructor
    public ClassName() {
        // Initialization logic
    }
}
public class Car {
    String model;

    // Parameterized Constructor
    public Car(String modelName) {
        this.model = modelName;
    }
}
Car car1 = new Car("BMW");

2>Naming Conventions
Element	            	    Example
Class/Interface Name		Product, OrderManager, RecommendationEngine
Method Name		            getUserId(), computeTotal(), sortItems()
Field/Member Variable		userId, productList, isAvailable
Getter Method	            getProductName(), getPrice()
Constant/Static Final   	ALL_UPPERCASE_WITH_UNDERSCORES (MAX_RETRIES, DEFAULT_TIMEOUT)
Package Name	            lowercase.dotted	com.amazon.recommendation

3>public static void main(String[] args) {
}
This is the entry point of any standalone Java program

4>Java collections (List, Set, etc.) work only with objects, not primitives. So we use:
  Integer for int
  Double for double
  Boolean for boolean

9>Integer → String
    int num = 123;
    String str = Integer.toString(num);  // "123"

10>String → Integer
    String str = "123";
    int num = Integer.parseInt(str);  // 123

11


